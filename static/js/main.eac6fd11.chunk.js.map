{"version":3,"sources":["components/navbar/NavBar.js","components/jumbotron/Jumbotron.js","components/item/Item.js","components/list/List.js","components/btn/Btn.js","containers/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["library","add","fab","faGithub","NavBar","className","href","icon","size","style","color","Jumbotron","Item","props","formatNumber","num","len","toString","length","count","id","employee_name","employeeName","toLowerCase","split","makeEmailAddress","fragment1","Math","floor","random","fragment2","fragment3","makePhoneNumber","employee_age","List","employees","map","employee","key","Btn","classList","push","join","onClick","type","children","defaultProps","MainPage","state","employeesToDisplay","searchTerm","clearFilter","setState","getEmployees","axios","get","then","response","data","catch","err","console","log","handleChange","event","target","name","value","handleSubmit","preventDefault","filteredEmployees","filter","regex","RegExp","match","this","onSubmit","placeholder","autoComplete","onChange","Component","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eac6fd11.chunk.js","sourcesContent":["import React from 'react';\n\n// font awesome icons\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(fab, faGithub)\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-light bg-light justify-content-between\">\n        <a className=\"navbar-brand\" href=\"/\">Employee Directory</a>\n        <a className=\"nav-link active\" href=\"https://github.com/ChefJayPeek/employeedirectory\">\n            <FontAwesomeIcon icon={faGithub} size=\"2x\" style={{ color: 'black' }} />\n        </a>\n    </nav>\n  );\n};\n\nexport default NavBar;","import React from \"react\";\n\nconst Jumbotron = () => {\n  return (\n    <div className=\"jumbotron text-center\">\n      <h1 className=\"display-4\">Employee Directory</h1>\n      <p className=\"lead\">This is an employee directory created with React.</p>\n      <hr className=\"my-4\" />\n      <p>\n        Displays non sensitive data about employees, so that other employees can look up information about their coworkers.\n      </p>\n    </div>\n  );\n};\n\nexport default Jumbotron;","import React from \"react\";\n\nconst Item = (props) => {\n  // Generate e-mail addresses\n  function makeEmailAddress(props) {\n    var employeeName = props.employee_name.toLowerCase().split(\" \");\n    var EmailAddress = `${employeeName[0]}.${employeeName[1]}@company.com`;\n    return EmailAddress;\n  }\n\n  // Generate phone numbers\n  function makePhoneNumber() {\n    var fragment1 = Math.floor(Math.random() * 800 + 200);\n    var fragment2 = Math.floor(Math.random() * 1000);\n    var fragment3 = Math.floor(Math.random() * 10000);\n    var PhoneNumber = `(${formatNumber(fragment1)}) ${formatNumber(fragment2)}-${formatNumber(fragment3, 4)}`;\n    return PhoneNumber;\n  }\n\n  // © Ben\n  // Phone number random 0 first fix\n  function formatNumber(num, len = 3) {\n    num = num.toString();\n    if (num.length < len) { // 1: length 1\n      var count = len - num.length; // count = 2\n      while (count) {\n        num = \"0\" + num; // 01, // 001\n        count--; // count = 1, count = 0\n      }\n    }\n    return num; // 001\n  }\n\n  return (\n    <div className=\"row item-row\">\n      <div className=\"col-sm-1\">{props.id}</div>\n      <div className=\"col-md-3\">{props.employee_name}</div>\n      <div className=\"col-md-5\">{makeEmailAddress(props)}</div>\n      <div className=\"col-md-2\">{makePhoneNumber()}</div>\n      <div className=\"col-sm-1\">{props.employee_age}</div>\n    </div>\n  );\n};\n\nexport default Item;","import React from \"react\";\nimport Item from \"../item/Item\";\nimport \"./list.css\";\n\nconst List = (props) => {\n    return (\n    <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-md-12 p-4 text-center\">\n                <h3>\n                    Employee List\n                </h3>\n            </div>\n        </div>\n        <div className=\"row list-headers\">\n            <div className=\"col-sm-1\">ID #</div>\n            <div className=\"col-md-3\">Full Name</div>\n            <div className=\"col-md-5\">Email Address</div>\n            <div className=\"col-md-2\">Phone Number</div>\n            <div className=\"col-sm-1\">Age</div>\n        </div>\n        <div>\n            {props.employees.map((employee) => (\n            <Item {...employee} key={employee.id} />\n            ))}\n        </div>\n        <div className=\"row\">\n            <div className=\"col-sm-12 p-4 text-right\">\n                <i>\n                    {props.employees.length} employee(s) listed.\n                </i> \n            </div>\n        </div>\n    </div>\n    );\n};\n\nexport default List;\n","import React from \"react\";\nimport \"./btn.css\";\n\n// © Ben\nfunction Btn(props) {\n    // props: {color:\"secondary\", onClick=f(x), children: \"Clear Filter\"}\n    const classList = [\"btn\"];\n  \n    if (props.color) classList.push(\"btn-\" + props.color);\n  \n    return (\n      <button\n        className={classList.join(\" \") + \" btn3d\" + \" btn-xs\"}\n        onClick={props.onClick}\n        type={props.type}\n      >\n        {props.children}\n      </button>\n    );\n  }\n  \n  // DEFAULT PROPS\n  Btn.defaultProps = {\n    color: \"primary\",\n    onClick: () => false,\n    children: \"\",\n    type: \"button\",\n  };\n\n  export default Btn;","import React, { Component } from \"react\";\nimport List from \"../components/list/List\";\nimport axios from \"axios\";\nimport Btn from \"../components/btn/Btn\";\n\nclass MainPage extends Component {\n  state = {\n    employees: [],\n    employeesToDisplay: [],\n    searchTerm: \"\",\n  };\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  clearFilter = () => {\n    this.setState({\n      employeesToDisplay: this.state.employees,\n      searchTerm: \"\",\n    });\n  };\n\n  getEmployees = () => {\n    axios\n      // © http://dummy.restapiexample.com/\n      .get(\"https://dummy.restapiexample.com/api/v1/employees\")\n      .then((response) => {\n        this.setState({\n          employees: response.data.data,\n          employeesToDisplay: response.data.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const employees = [...this.state.employees];\n\n    const filteredEmployees = employees.filter((employee) => {\n      const regex = new RegExp(this.state.searchTerm, \"gi\");\n      return employee.employee_name.match(regex);\n    });\n\n    this.setState({\n      employeesToDisplay: filteredEmployees,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"row\">\n                  <div className=\"col-sm-2\" />\n                  <div className=\"col-sm-8\">\n                    <div className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search employees by first or last name\"\n                        name=\"searchTerm\"\n                        autoComplete=\"off\"\n                        value={this.state.searchTerm}\n                        onChange={this.handleChange}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-1 text-center\">\n                    <Btn type=\"submit\">Submit</Btn>\n                  </div>\n                  <div className=\"col-sm-1 text-center\">\n                    {this.state.employees.length !==\n                      this.state.employeesToDisplay.length && (\n                      <Btn color=\"danger\" onClick={this.clearFilter}>\n                        Clear\n                      </Btn>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <List employees={this.state.employeesToDisplay} />\n      </>\n    );\n  }\n}\nexport default MainPage;","import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './css/App.css';\n\n// components\n\nimport NavBar from \"./components/navbar/NavBar\";\nimport Jumbotron from \"./components/jumbotron/Jumbotron\";\nimport MainPage from \"./containers/MainPage\";\n\n\n// app\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL + \"/\"}>\n      <NavBar />\n      <Jumbotron />\n      <Route exact path=\"/\" component={MainPage} />\n    </Router>\n  );\n}\n\n// export\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}